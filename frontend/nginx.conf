events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Resolver configuration - updated to handle Docker DNS and include Google DNS as fallback
    resolver 127.0.0.11 8.8.8.8 ipv6=off valid=60s;
    resolver_timeout 10s;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # HTTP Server - Main server configuration
    server {
        listen 80;
        server_name awesome-iguanas.com awesome-iguanasc.om localhost;
        
        # Main content location
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html; # Ensures all paths fallback to index.html for Vue Router

            # Add cache control headers
            add_header Cache-Control "no-cache";
            
            # Add CORS headers for all responses
            add_header "Access-Control-Allow-Origin" "*" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            # Handle OPTIONS requests for CORS preflight
            if ($request_method = "OPTIONS") {
                add_header "Access-Control-Allow-Origin" "*" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, PUT, DELETE" always;
                add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header "Access-Control-Max-Age" 1728000 always;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }
        }
        
        # Proxy for Ollama API - properly handle CORS issues
        location /api/ {
            # Add explicit CORS headers for all responses
            add_header "Access-Control-Allow-Origin" "*" always;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS" always;
            add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header "Access-Control-Allow-Credentials" "true" always;
            
            # Handle OPTIONS requests for CORS preflight
            if ($request_method = "OPTIONS") {
                add_header "Access-Control-Allow-Origin" "*" always;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS" always;
                add_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header "Access-Control-Allow-Credentials" "true" always;
                add_header "Access-Control-Max-Age" 1728000 always;
                add_header "Content-Type" "text/plain charset=UTF-8";
                add_header "Content-Length" 0;
                return 204;
            }

            # Use localhost since we are using SSH port forwarding
            proxy_pass http://localhost:11434/;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Keep connection alive
            proxy_set_header Connection "keep-alive";
            
            # Increase timeouts for LLM operations
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;
        }

        # Neo4j Bolt WebSocket Proxy
        location /neo4j/ {
            proxy_pass http://localhost:7687/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_connect_timeout 60s;
        }

        error_page 404 /index.html; # Redirect 404s to index.html as well

        # Enable large file uploads if needed
        client_max_body_size 20M;
    }
}
